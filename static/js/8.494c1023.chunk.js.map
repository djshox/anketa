{"version":3,"sources":["components/Head/head.jsx","components/SideBar/sidebar.jsx","roots/homeLayout.jsx"],"names":["Head","useTranslation","t","i18n","useState","localStorage","getItem","lang","changeLang","changeLanguage","getColor","til","span","className","style","textAlign","ButtonGroup","disableRipple","orientation","size","variant","Button","onClick","withRouter","connect","isAuth","Auth","signOutThunk","props","menuNames","name","page","id","map","item","key","to","s","active","type","history","push","HomePage","lazy","AnketaPage","Tgbot","NonePage","HomePageLayout","client","changeClient","exact","path","render"],"mappings":"mQAiDeA,EAxCF,WAAO,IAAD,EACKC,cAAZC,EADO,EACPA,EAAGC,EADI,EACJA,KADI,EAEYC,mBAASC,aAAaC,QAAQ,eAF1C,mBAERC,EAFQ,KAEFC,EAFE,KAIf,SAASC,EAAeF,GACpBC,EAAWD,GACXJ,EAAKM,eAAeF,GAGxB,SAASG,EAASC,GACd,OAAOJ,IAASI,EAAM,oCAAsC,wBAGhE,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,KAAM,GAAIC,UAAU,sBAAsBC,MAAO,CAAEC,UAAW,WAC/D,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKH,KAAM,IACP,wBAAIC,UAAU,oBAAd,IAAmCX,EAAE,aAArC,MAEJ,kBAAC,IAAD,CAAKU,KAAM,GACP,kBAACI,EAAA,EAAD,CACIC,eAAa,EACbC,YAAY,WACZC,KAAK,QACLC,QAAQ,QAER,kBAACC,EAAA,EAAD,CAAQR,UAAWH,EAAS,MAAOO,eAAa,EAACK,QAAS,kBAAMb,EAAe,QAA/E,MACA,kBAACY,EAAA,EAAD,CAAQR,UAAWH,EAAS,MAAOO,eAAa,EAACK,QAAS,kBAAMb,EAAe,QAA/E,MACA,kBAACY,EAAA,EAAD,CAAQR,UAAWH,EAAS,MAAOO,eAAa,EAACK,QAAS,kBAAMb,EAAe,QAA/E,a,0DCEjBc,cAAWC,aAHF,SAAC,GACvB,MAAO,CAAEC,OAD2B,EAAXC,KACHD,UAE2B,CAAEE,kBAA3BH,EAhCV,SAACI,GAAW,IAClB1B,EAAMD,cAANC,EACJ2B,EAAY,CAAC,CAAEC,KAAM5B,EAAE,QAAS6B,KAAM,SAAW,CAAED,KAAM5B,EAAE,UAAW6B,KAAM,YAOhF,OACE,yBAAKlB,UAAU,qCACb,yBAAKmB,GAAG,UAAUnB,UAAU,4BAC1B,wBAAIA,UAAU,cAEVgB,EAAUI,KAAI,SAACC,EAAMC,GAAP,OACZ,wBAAItB,UAAU,+BAA+BsB,IAAKA,GAChD,kBAAC,IAAD,CAASC,GAAIF,EAAKH,KAAMlB,UAAWwB,IAAEC,QAASJ,EAAKJ,UAIzD,wBAAIjB,UAAU,gCACZ,kBAAC,SAAD,CAAQ0B,KAAK,OAAO1B,UAAU,cAAcS,QAlBvC,WACbM,EAAMD,eACDC,EAAMH,QACTG,EAAMY,QAAQC,KAAK,YAeiDvC,EAAE,mBCxBtEwC,G,OAAWC,gBAAK,kBAAM,yDACtBC,EAAaD,gBAAK,kBAAM,kCACxBE,EAAQF,gBAAK,kBAAM,sCACnBG,EAAWH,gBAAK,kBAAM,iCA6BbI,UA3BQ,SAACnB,GAAW,IAAD,EACCxB,mBAAS,IADV,mBACvB4C,EADuB,KACfC,EADe,KAE9B,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,yBAAKpC,UAAU,mBACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,CAASiB,KAAK,WAEd,yBAAKjB,UAAU,UACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,KACd,kBAAC,IAAD,CAAUf,GAAG,WAEjB,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,QAAQC,OAAQ,kBAAM,kBAACV,EAAD,CAAUO,aAAcA,OAChE,kBAAC,IAAD,CAAOE,KAAK,mBAAmBC,OAAQ,kBAAM,kBAAER,EAAF,CAAaI,OAAQA,OAClE,kBAAC,IAAD,CAAOG,KAAK,SAASC,OAAQ,kBAAM,kBAACP,EAAD,SACnC,kBAAC,IAAD,CAAOO,OAAQ,kBAAM,kBAACN,EAAD","file":"static/js/8.494c1023.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport \"./head.css\";\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Row, Col } from 'antd';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useTranslation } from 'react-i18next';\n\n\nconst Head = () => {\n    const { t, i18n } = useTranslation();\n    const [lang, changeLang] = useState(localStorage.getItem('i18nextLng'))\n\n    function changeLanguage(lang) {\n        changeLang(lang)\n        i18n.changeLanguage(lang);\n    }\n\n    function getColor(til) {\n        return lang === til ? \"text-white my-n1 py-0 text-danger\" : \"text-white my-n1 py-0\"\n    }\n\n    return (\n        <div>\n            <Row >\n                <Col span={24} className=\"bg-dark text-white \" style={{ textAlign: \"center\" }} >\n                    <Row>\n                        <Col span={23}>\n                            <h3 className=\" mt-2 text-white\"> {t('head_page')} </h3>\n                        </Col>\n                        <Col span={1}>\n                            <ButtonGroup\n                                disableRipple\n                                orientation=\"vertical\"\n                                size=\"small\"\n                                variant=\"text\"\n                            >\n                                <Button className={getColor(\"en\")} disableRipple onClick={() => changeLanguage('en')}>en</Button>\n                                <Button className={getColor(\"ru\")} disableRipple onClick={() => changeLanguage('ru')}>ru</Button>\n                                <Button className={getColor(\"uz\")} disableRipple onClick={() => changeLanguage('uz')}>uz</Button>\n                            </ButtonGroup>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n    );\n\n}\nexport default Head; ","import React from \"react\";\nimport s from \"./sidebar.css\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\nimport { Button } from \"element-react\";\nimport { connect } from \"react-redux\"\nimport { signOutThunk } from \"localRedux/authReducer\";\n\n\nconst Sidebar = (props) => {\n  const { t } = useTranslation();\n  let menuNames = [{ name: t('home'), page: \"/home\" }, { name: t('anketa'), page: \"/anketa\" }]\n  const logOut = () => {\n    props.signOutThunk();\n    if (!props.isAuth) {\n      props.history.push('/login')\n    }\n  }\n  return (\n    <div className=\"bg-secondary text-white col-2 p-0\" >\n      <div id=\"sidebar\" className=\" bg-secondary text-white\">\n        <ul className=\"list-group\">\n          {\n            menuNames.map((item, key) =>\n              <li className=\"list-group-item bg-secondary\" key={key}>\n                <NavLink to={item.page} className={s.active}>{item.name}</NavLink>\n              </li>\n            )\n          }\n          <li className=\"list-group-item bg-secondary\">\n            <Button type='text' className=\"text-danger\" onClick={logOut}>{t('logOut')}</Button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ Auth }) => {\n  return { isAuth: Auth.isAuth }\n}\nexport default withRouter(connect(mapStateToProps, { signOutThunk })(Sidebar));\n","import React, { lazy, useState } from \"react\";\nimport Head from \"./../components/Head/head.jsx\";\nimport Sidebar from \"./../components/SideBar/sidebar.jsx\";\nimport { BrowserRouter, Switch, Redirect, Route } from 'react-router-dom';\nimport \"antd/dist/antd.css\";\n\nconst HomePage = lazy(() => import(\"./../components/Content/HomePage/HomeContainer.jsx\"));\nconst AnketaPage = lazy(() => import(\"./../components/Content/Anketa/Anketa.jsx\"));\nconst Tgbot = lazy(() => import(\"./../components/Content/tgBot/tgBot.jsx\"));\nconst NonePage = lazy(() => import(\"./../roots/noneLayout\"));\n\nconst HomePageLayout = (props) => {\n    const [client, changeClient] = useState({})\n    return (\n        <BrowserRouter>\n            <Head />\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <Sidebar name=\"asosiy\" />\n\n                    <div className=\"col-10\" >\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Redirect to=\"/home\" />\n                            </Route >\n                            <Route exact path=\"/home\" render={() => <HomePage changeClient={changeClient} />} />\n                            <Route path=\"/anketa/:userId?\" render={() => < AnketaPage client={client} />} />\n                            <Route path=\"/tgbot\" render={() => <Tgbot />} />\n                            <Route render={() => <NonePage />} />\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n        </BrowserRouter >\n\n    );\n}\n\nexport default HomePageLayout;\n"],"sourceRoot":""}